version: '3'

services:
  redis:
    image: redis:6.2.6
    restart: always
    expose:
      - '6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - etl
      - api

  database:
    image: postgres:13-alpine3.16
    restart: always
    expose:
      - "5432"
    env_file:
      - postgres/.env
    volumes:
      - ./postgres/init_data_prod/:/docker-entrypoint-initdb.d/
      - ./postgres/data:/var/lib/postgresql/data/
    networks:
      - etl

  elastic:
    image: elasticsearch:7.17.4
    restart: always
    container_name: elasticsearch
    expose:
      - "9200"
    volumes:
      - ./elastic_index/data:/usr/share/elasticsearch/data
    networks:
      - etl
      - api
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms200m -Xmx200m

  kibana:
    image: kibana:7.17.4
    ports:
      - "5601:5601"
    depends_on:
      - elastic
    networks:
      - api

  etl:
    build: etl
    restart: always
    env_file:
      - ./etl/app/etl/.env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=database
      - ES_HOST=elastic
    networks:
      - api
      - etl
    depends_on:
      - elastic
      - database
      - redis

  app:
    build: app
    restart: always
    entrypoint: ["gunicorn", "main:app", "--workers", "4", "--worker-class",
                 "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "--reload"]
    environment:
      - REDIS_HOST=redis
      - ES_HOST=elastic
    depends_on:
      - elastic
      - redis
    expose:
      - "8000"
    networks:
      - api


  nginx:
    image: nginx:1.21.6
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - api

volumes:
  static_volume:
    external: true
  cache:
    driver: local
  esdata:
    external: true


networks:
  etl:
    driver: bridge
  api:
    driver: bridge